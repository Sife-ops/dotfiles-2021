#     _
#    | |_ _ __ ___  _   ___  __
#    | __| '_ ` _ \| | | \ \/ /
#    | |_| | | | | | |_| |>  <
#     \__|_| |_| |_|\__,_/_/\_\

#^ set-option

# set-option -g status-right "#[fg=brightmagenta]#(notify.sh) #[fg=brightred]#(mail.sh) #[fg=brightgreen]#(feeds.sh) #[fg=brightblue]#(pacman.sh) #[fg=brightmagenta]#(battery.sh) #[fg=brightcyan]#(internet.sh) #[fg=brightred]#(memory.sh) #[default]#(clock.sh) "
# set-option -wg xterm-keys on
set-option -g default-terminal "tmux-256color"
set-option -g mouse on
set-option -g pane-active-border-style fg=brightgreen
set-option -g pane-border-style fg=brightblack
set-option -g prefix `
set-option -g prefix2 "\\"
set-option -g renumber-windows on
set-option -g status-interval 60
set-option -g status-right-length 999
set-option -g status-style fg=white
set-option -g visual-bell off
set-option -g window-active-style fg=brightwhite
set-option -g window-style fg=white
set-option -sg escape-time 0
set-option -wg mode-keys vi
set-option -wg window-status-current-format '#[fg=darkblue,bright,bg=brightyellow,bright] #W '
set-option -wg window-status-format '#[fg=brightyellow] #W '

#$

#^ unbind

unbind &
unbind 1
unbind C-b
unbind c
unbind q
unbind r
unbind x

#$

#^ bind-key

bind-key "\\" send-prefix -2
bind-key & kill-window
bind-key -Tcopy-mode-vi 'y' send-keys -X copy-pipe "tee ${CLIPBOARD}/00 | xclip -i -selection clipboard"
bind-key -Troot 'PgUp' copy-mode -eu
bind-key 1 kill-pane -a
bind-key < swap-window -d -t -1
bind-key > swap-window -d -t +1
bind-key C-t split-window -f -v -c "#{pane_current_path}"
bind-key C-v split-window -f -h -c "#{pane_current_path}"
bind-key R source-file "~/.config/tmux/tmux.conf"
bind-key ` send-prefix
bind-key c new-window -c "#{pane_current_path}"
bind-key p previous-window
bind-key q kill-session
bind-key r respawn-pane -k
bind-key t split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key x kill-pane

#$

#^ vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
#$

#^ better-vim-tmux-resizer
# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Edit values if you use custom resize_count variables
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "resize-pane -L 10"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "resize-pane -D 5"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "resize-pane -U 5"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "resize-pane -R 10"

bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 5
bind-key -T copy-mode-vi M-k resize-pane -U 5
bind-key -T copy-mode-vi M-l resize-pane -R 10
#$

# source-file "${XDG_CONFIG_HOME}/tmux/conf.d/*"

# vim: fdm=marker fmr=#^,#$
